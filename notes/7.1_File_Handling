File Handling:

steps:
open a file
perform some actions
close a file

opening
f=open("filename") -- default mode

modes:
r-reading
w - write mode
a - opens for appending at end creates a new file if not exist
i- text modeb - binary mode


f = open("name",'a')--creates appends to existing 
f = open("name",'w')-creates n write mode overwrites
f.close() -> closes the file

-----------------------

should be closed to avoid memory leak

context manager(with) -- automatic delocation of memory

with open(name ,'r') as f :
	--open 
--file closed
-----------------------writing a file
f = open("name",'a')

or 

with open(name,'w') as f:
	f.write(content)

-------------------------------
reading a file
with open(name,'f') as f:
	data = f.read()
read(optional param no of characters)

f starts at 0 then moves to the place depends n readed chars


f.seek(5) -> mpoves to a given plsce

----------------------------------------
reading line by line

with open(name,'f') as f
	for line in f: --> works like a list
	print(line)
	break

or else

data = f.readlines()
//data is a list

----------------------------------------

appending a file
with open(name,'a') as f
f.write(add)
-------------------------
changing content in a file

Changing the content in a file
import os
filename = "test.txt"

data = None

with open(filename, 'r') as f:
    data = f.readlines()
    
print(data)
['This file has been generated by Python.\n', 'I love python programming.\n', 'Alpha Beta Gamma.']
data[-1] = "Python is FUN!!\n"
data_to_write =  "".join(data)
print(data_to_write)
This file has been generated by Python.
I love python programming.
Python is FUN!!

with open("temp.txt", 'w') as f:
    f.write(data_to_write)
os.remove(filename)
os.rename("temp.txt", filename)






